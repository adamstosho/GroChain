version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: grochain-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: grochain
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - grochain-network

  # GroChain Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: grochain-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/grochain?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-this-in-production
      JWT_EXPIRES_IN: 1h
      JWT_REFRESH_EXPIRES_IN: 7d
      PAYSTACK_SECRET_KEY: sk_test_your_paystack_secret_key
      PAYSTACK_PUBLIC_KEY: pk_test_your_paystack_public_key
      BASE_URL: http://localhost:5000
      CLOUDINARY_CLOUD_NAME: your_cloudinary_cloud_name
      CLOUDINARY_API_KEY: your_cloudinary_api_key
      CLOUDINARY_API_SECRET: your_cloudinary_api_secret
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      CORS_ORIGIN: http://localhost:3000
      LOG_LEVEL: info
    ports:
      - "5000:5000"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - mongodb
    networks:
      - grochain-network
    command: npm run dev

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: grochain-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - grochain-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  grochain-network:
    driver: bridge
